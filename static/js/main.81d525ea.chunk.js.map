{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h1/AlternativeMessage.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/HW5.module.css","p2-homeworks/h5/Routes.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/AlternativeSuperButton.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/common/c2-SuperButton/AlternativeSuperButton.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Title","props","onClick","className","s","title","Accordeon","navlinksAccordeon","item","to","activeClassName","activeLink","Header","useState","collapsed","setCollapsed","header","Message","message","ava","src","avatar","alt","name","text","el","time","AlternativeMessage","messageData","AlternativemessageData","HW1","SuperButton","red","restProps","finalClassName","default","Affair","affair","key","_id","someClass","priority","deleteAffairCallback","Affairs","mappedAffairs","data","map","a","conteiner","setFilter","defaultAffairs","HW2","affairs","setAffairs","filter","filteredAffairs","filterAffairs","t","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","superInput","errorInput","e","currentTarget","value","Greeting","setNameCallback","addUser","onKeyPressHandler","totalUsers","inputClass","container","btn","GreetingContainer","users","addUserCallback","setName","setError","alert","length","HW3","setUsers","addedUser","v1","SuperCheckbox","onChangeChecked","children","checkbox","lab","checked","AlternativeSuperButton","HW4","setText","showAlert","setChecked","column","PreJunior","Error404","SuperEditableSpan","autoFocus","onBlur","spanProps","console","log","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PATH","Routes","mainPage","path","exact","render","HW5","border","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.81d525ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__pxJVv\",\"navlinksAccordeon\":\"Header_navlinksAccordeon__1lt23\",\"title\":\"Header_title__14EIn\",\"item\":\"Header_item__3kKYQ\",\"activeLink\":\"Header_activeLink__3OgoN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2b-s_\",\"ava\":\"Message_ava__3nQdD\",\"name\":\"Message_name__2iof7\",\"text\":\"Message_text__25eYm\",\"time\":\"Message_time__3vpZ4\",\"el\":\"Message_el__3zv63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"AlternativeMessage_message__2i1qh\",\"ava\":\"AlternativeMessage_ava__3nqsX\",\"name\":\"AlternativeMessage_name__3luGG\",\"text\":\"AlternativeMessage_text__74loG\",\"time\":\"AlternativeMessage_time__3MT9_\",\"el\":\"AlternativeMessage_el__1GOIN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__3Nua5\",\"affair\":\"Affairs_affair__2L6xZ\",\"conteiner\":\"Affairs_conteiner__2P8Vk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__33DOZ\",\"error\":\"Greeting_error__2VpjI\",\"container\":\"Greeting_container__24VYH\",\"btn\":\"Greeting_btn__1-ycI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1YPZb\",\"red\":\"SuperButton_red__35gXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3peQD\",\"errorInput\":\"SuperInputText_errorInput__3QHCb\",\"error\":\"SuperInputText_error__vnhPq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lab\":\"SuperCheckbox_lab__1zoLR\",\"checkbox\":\"SuperCheckbox_checkbox__m73lH\",\"spanClassName\":\"SuperCheckbox_spanClassName__2_k0_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__YW9It\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"HW5_border__2uo8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"Routes_mainPage__EKvFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3O7r3\",\"column\":\"HW4_column__5CLly\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"AlternativeSuperButton_btn__3Iu-0\"};","import React, {useState} from \"react\";\nimport s from \"./Header.module.css\";\nimport {NavLink} from 'react-router-dom';\n\nfunction Header() {\n    let [collapsed, setCollapsed] = useState<boolean>(true);\n    const onClickHandler = () => {\n        setCollapsed(!collapsed);\n\n    };\n    return (\n        <div className={s.header}>\n            <Title collapsed={collapsed} onClick={onClickHandler} title=\"Junior's menu\"/>\n            {!collapsed && <Accordeon/>}\n        </div>\n    )\n};\n\nfunction Title(props: any) {\n    return (\n            <div onClick={props.onClick} className={s.title}>{props.title}</div>\n    );\n}\n\nfunction Accordeon() {\n    return (<div className={s.navlinksAccordeon}>\n        <ul>\n            <div className={s.item}>\n                <NavLink to=\"/preJunior\" activeClassName={s.activeLink}>preJunior</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/Junior\" activeClassName={s.activeLink}>Junior</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/Junior+\" activeClassName={s.activeLink}>Junior+</NavLink>\n            </div>\n        </ul>\n    </div>)\n}\n\nexport default Header;\n","import React from \"react\";\nimport s from \"./Message.module.css\"\n\ntype messageType = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string,\n}\n\nfunction Message(props: messageType) {\n    return (\n        <div className={s.message}>\n            <div className={s.ava}>\n                <img src={props.avatar} alt=\"\"/>\n            </div>\n            <div className={s.name}>\n                <div>\n                    <span>{props.name}</span>\n                </div>\n            </div>\n            <div className={s.text}>\n                <div>\n                    <span>{props.message}</span>\n                </div>\n                <div className={s.el}></div>\n            </div>\n            <div className={s.time}>\n                <div><span>{props.time}</span></div>\n            </div>\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport s from \"./AlternativeMessage.module.css\";\n\ntype messageType = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string,\n}\n\nfunction AlternativeMessage(props: messageType) {\n    return (\n        <div className={s.message}>\n            <div className={s.ava}>\n                <img src={props.avatar} alt=\"\"/>\n            </div>\n            <div className={s.name}>\n                <div>\n                    <span>{props.name}</span>\n                </div>\n            </div>\n            <div className={s.text}>\n                <div>\n                    <span>{props.message}</span>\n                </div>\n                <div className={s.el}></div>\n            </div>\n            <div className={s.time}>\n                <div><span>{props.time}</span></div>\n            </div>\n        </div>\n    );\n}\n\nexport default AlternativeMessage;\n","import React from \"react\";\nimport Message from \"./Message\";\nimport AlternativeMessage from \"./AlternativeMessage\";\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Some Name\",\n    message: \"some text\",\n    time: \"22:00\",\n};\nconst AlternativemessageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Alex\",\n    message: \"Доброго времени суток) Не сразу нашел этот треугольник) а так конечно верстка слабая у меня пока\" ,\n    time: \"22:06\",\n};\n\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            {/*homeworks 1*/}\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n            <hr/>\n            <AlternativeMessage\n                avatar={AlternativemessageData.avatar}\n                name={AlternativemessageData.name}\n                message={AlternativemessageData.message}\n                time={AlternativemessageData.time}\n            />\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = ` ${s.default} ${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport s from \"./Affairs.module.css\"\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType,\n    deleteAffairCallback: (_id: number) => void,\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => props.deleteAffairCallback(props.affair._id);\n    return (\n        <div className={s.affair} key={props.affair._id}>\n            <div className={s.someClass}>{props.affair.name + \"  \" + props.affair.priority + \"   \"}</div>\n            <SuperButton onClick={deleteCallback}>Delete</SuperButton>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport s from './Affairs.module.css'\nimport {AffairType, FilterType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairsPropsType = {\n    data: Array<AffairType>,\n    setFilter: (filterValue : FilterType) => void,\n    deleteAffairCallback: (_id: number) => void,\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    let mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter(\"all\")};\n    const setHigh = () => {props.setFilter(\"high\")};\n    const setMiddle = () => {props.setFilter(\"middle\")};\n    const setLow = () => {props.setFilter(\"low\")};\n\n    return (\n        <div className={s.conteiner}>\n\n            {mappedAffairs}\n\n            <SuperButton onClick={setAll}>All</SuperButton>\n            <SuperButton onClick={setHigh}>High</SuperButton>\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\n            <SuperButton onClick={setLow}>Low</SuperButton>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\" // need to fix any\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority: string,\n}\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === \"all\") return affairs;\n    if (filter === \"high\") {return affairs.filter(a => a.priority === \"high\")};\n    if (filter === \"middle\") {return affairs.filter(a => a.priority === \"middle\")\n    } else {\n        return affairs.filter(a => a.priority === \"low\")\n    };\n}\nexport const deleteAffair = (affairs:( Array<AffairType>), _id: number): Array<AffairType>  => {\n    return affairs.filter(t => {\n        if( t._id !== _id) {\n            return true\n        } else {\n            return false\n        }\n    })\n}\n\nfunction HW2() {\n    let [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\n\n    const deleteAffairCallback = (_id: number) => {\n        setAffairs(deleteAffair(affairs, _id))\n    };\n\n\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n            <hr/>\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\nimport {log} from \"util\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : \"\" } `; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\n\ntype GreetingPropsType = {\n    name: string,\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void,\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void,\n    error: string,\n    totalUsers: number,\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, onKeyPressHandler, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = (name ===\"\") ? s.error : s.someClass; // need to fix with (?:)\n\n    return (\n        <div className={s.container}>\n            <SuperInputText value={name} onKeyPress={onKeyPressHandler} onChange={setNameCallback} error={error} className={inputClass}/>\n            <div className={s.btn}><SuperButton onClick={addUser}>add</SuperButton></div>\n            <p>Количество добавленных имен: {totalUsers}</p>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> ,\n    addUserCallback: (name: string) => void,\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\");\n    const [error, setError] = useState<string>(\"\");\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.currentTarget.value !== \"\") {setError(\"\")};\n        setName(e.currentTarget.value);\n    }\n    const addUser = () => {\n        if (name !== \"\") {\n            addUserCallback(name);\n            alert(`Hello  ${name}`);\n            setName(\"\");\n        } else {\n            setError(\"Введите имя!\")\n        }\n    };\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\") {\n            addUser();\n        };\n    };\n\n    const totalUsers = users.length;\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            onKeyPressHandler={onKeyPressHandler}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\"\n\n// types\nexport type UserType = {\n    _id: string,\n    name: string,\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]);\n    const addUserCallback = (name: string) => {\n        const addedUser = {\n            _id: v1(),\n            name: name,\n        }\n        setUsers([addedUser, ...users]);\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked :boolean) => void,\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label className={s.lab}>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <div className={s.spanClassName}>{children}</div>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React from \"react\";\nimport s from \"./AlternativeSuperButton.module.css\"\n\nfunction AlternativeSuperButton() {\n    return (\n        <div>\n            <div className={s.btn}>Demo</div>\n        </div>\n    );\n}\n\nexport default AlternativeSuperButton;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\nimport AlternativeSuperButton from \"./common/c2-SuperButton/AlternativeSuperButton\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"Введите текст\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(true);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                     // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    alert {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            <AlternativeSuperButton/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    console.log(restProps.value)\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        // setEditMode(); // выключить editMode при нажатии Enter\n\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false)\n        // setEditMode(); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true)\n        // setEditMode(); // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`;\n\n    return (\n        <>\n            {editMode\n                ? (<SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />)\n                : (<span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>)\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        const state = restoreState(\"editable-span-value\", \"\");\n        setValue(state);\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from \"react\";\nimport {Route, Redirect, Switch} from 'react-router-dom';\nimport s from \"./Routes.module.css\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport HW6 from \"../h6/HW6\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/preJunior\",\n    JUNIOR: \"/Junior\",\n    JUNIOR_PLUS: \"/Junior+\",\n\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div className={s.mainPage}>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <HW6/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <Error404/>}/>\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport s from \"./HW5.module.css\"\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n                <Header/>\n                <div className={s.border}>\n                    <Routes/>\n                </div>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}